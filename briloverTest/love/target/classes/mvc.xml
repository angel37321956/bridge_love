<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
	    http://www.springframework.org/schema/beans 
	    http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
	    http://www.springframework.org/schema/context   
	    http://www.springframework.org/schema/context/spring-context-4.2.xsd  
	    http://www.springframework.org/schema/aop 
	    http://www.springframework.org/schema/aop/spring-aop-4.2.xsd  
	    http://www.springframework.org/schema/tx 
	    http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
	    http://www.springframework.org/schema/mvc 
	    http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">

	<!-- 1 配置哪些类需要Spring容器管理 -->
	<context:component-scan base-package="com.bridge.love.login.controller"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>

	<!-- 此处为SpringMVC的配置 开始 -->

	<!-- 2 视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- success /WEB-INF/success.jsp -->
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 静态的文件不需要SpringMVC拦截 开始 -->
	<mvc:annotation-driven />

	<!-- 4 不拦截静态的资源 不要拦截我们的.js文件 -->
	<!-- 只要文件放在根目录及其子目录下面的所有以.html .js等结尾的文件 -->
	<mvc:resources location="/" mapping="/**/*.html" />
	<mvc:resources location="/" mapping="/**/*.js" />
	<mvc:resources location="/" mapping="/**/*.css" />
	<mvc:resources location="/" mapping="/**/*.png" />
	<mvc:resources location="/" mapping="/**/*.gif" />
	<mvc:resources location="/" mapping="/**/*.jpg" />
	<!-- 静态的文件不需要SpringMVC拦截 结束 -->


	<!-- 3.0 org.springframework.http.converter.json.MappingJacksonHttpMessageConverter -->
	<!-- 4.0 org.springframework.http.converter.json.MappingJackson2HttpMessageConverter -->
	<!-- 5 将对象转化为JSON 需要@ResponseBoby支持 开始 -->
	<bean id="jsonConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonConverter" />
			</list>
		</property>
	</bean>
	<!-- 将对象转化为JSON 需要@ResponseBoby支持 结束 -->
	<!-- 此处为SpringMVC的配置 结束 -->

	<!-- 文件上传开始 -->
	<!-- 文件上传 -->
	<!--200*1024*1024即200M resolveLazily属性启用是为了推迟文件解析，以便捕获文件大小异常 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="209715200" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="resolveLazily" value="true" />
	</bean>
	<!-- 文件上传结束 -->

	<!-- shiro框架配置开始 -->
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
	<!-- 开启shiro注解支持 -->
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.apache.shiro.authz.UnauthorizedException">refuse</prop>
			</props>
		</property>
	</bean>
	<!-- shiro框架配置结束 -->

</beans>
